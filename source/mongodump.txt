.. _mongodump:

=========
mongodump
=========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. facet::
   :name: programming_language
   :values: shell

.. facet::
   :name: genre
   :values: reference

.. binary:: mongodump

.. program:: mongodump
 
.. |arrow| unicode:: U+27A4
.. |tool-binary| replace:: ``mongodump``
.. |mongodb-aws-example| replace:: :ref:`mongodump-example-connect-using-aws-iam`

Definition
----------

``mongodump`` is a utility that creates a binary export of
a database's contents. ``mongodump`` can export data from:

- Standalone deployments
- Replica sets
- Sharded clusters
- :atlas:`Serverless instances 
  </create-database-deployment/#serverless-instances>`

.. |tool-command| replace:: ``mongodump``

.. include:: /includes/fact-migrate-atlas.rst

``mongodump`` can connect to :binary:`~bin.mongod` and
:binary:`~bin.mongos` instances.

.. include:: /includes/extracts/require-cmd-line-mongodump.rst

.. seealso::

   :binary:`~bin.mongorestore`, which allows you to import data that was
   exported from ``mongodump``.

.. include:: /includes/fact-online-archive-callout.rst

Syntax
------

``mongodump`` syntax:

.. code-block:: sh

   mongodump <options> <connection-string>

.. include:: /includes/extracts/require-cmd-line-mongodump.rst

Connect to a MongoDB Instance
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To connect to a local MongoDB instance running on port 27017 and use
the default settings to export the content, run
``mongodump`` without any command-line options:

.. code-block:: sh

   mongodump

To specify a host and/or port of the MongoDB instance, you can either:

- Specify the hostname and port in the :option:`--uri connection string
  <mongodump --uri>`:

  .. code-block:: sh

     mongodump --uri="mongodb://mongodb0.example.com:27017" [additional options]

- Specify the hostname and port in the :option:`--host <mongodump
  --host>`:

  .. code-block:: sh

     mongodump --host="mongodb0.example.com:27017"  [additional options]
  
- Specify the hostname and port in the :option:`--host <mongodump
  --host>` and :option:`--port <mongodump --port>`:

  .. code-block:: sh

     mongodump --host="mongodb0.example.com" --port=27017 [additional options]

For more information on the options available, see :ref:`mongodump-options`.

Connect to a Replica Set
~~~~~~~~~~~~~~~~~~~~~~~~

To connect to a replica set to export its data, you can either:

- Specify the replica set name and members in the :option:`--uri connection string <mongodump --uri>`:

  .. code-block:: sh
  
     mongodump --uri="mongodb://mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com:27017/?replicaSet=myReplicaSetName" [additional options]

- Specify the replica set name and members in the :option:`--host <mongodump --host>`:

  .. code-block:: sh

     mongodump --host="myReplicaSetName/mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com" [additional options]

By default, ``mongodump`` reads from the primary of the
replica set. To override the default, you can specify the :ref:`read
preference <replica-set-read-preference>`:

- You can specify the read preference in the
  :option:`--uri connection string <mongodump --uri>`

  .. code-block:: sh

     mongodump --uri="mongodb://mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com:27017/?replicaSet=myReplicaSetName&readPreference=secondary" [additional options]

  If specifying the read preference tags, include the
  :urioption:`readPreferenceTags` option:

  .. code-block:: sh

     mongodump --uri="mongodb://mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com:27017/?replicaSet=myReplicaSetName&readPreference=secondary&readPreferenceTags=region:east" [additional options]

- You can specify the read preference using the
  :option:`--readPreference <mongodump --readPreference>` command-line
  option. The command-line option takes a string if specifying only the read preference mode:

  .. code-block:: sh

     mongodump --host="myReplicaSetName/mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com:27017" --readPreference=secondary [additional options]

  Or, the command-line option can takes a quote-enclosed document 
  ``'{ mode: <mode>, tagSets: [ <tag1>, ... ], maxStalenessSeconds:<num>}'`` 
  to specify the mode, the optional :ref:`read preference tag
  sets <configure-read-pref-tags>`, and the optional
  :ref:`maxStalenessSeconds
  <replica-set-read-preference-max-staleness>`:
  
  .. code-block:: sh

     mongodump --host="myReplicaSetName/mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com:27017" --readPreference='{mode: "secondary", tagSets: [ { "region": "east" } ]}' [additional options]

For more information on the options available, see :ref:`mongodump-options`.

Connect to a Sharded Cluster
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To connect to a sharded cluster to export its data, you can either:

- Specify the hostname of the :binary:`~bin.mongos` instance in the
  :option:`--uri connection string <mongodump --uri>`

  .. code-block:: sh
  
     mongodump --uri="mongodb://mongos0.example.com:27017" [additional options]

- Specify the hostname and port of the :binary:`~bin.mongos` instance in the :option:`--host <mongodump --host>` 

  .. code-block:: sh

     mongodump --host="mongos0.example.com:27017" [additional options]

By default, ``mongodump`` reads from the primary of the
shard replica set. To override the default, you can specify the :ref:`read
preference <replica-set-read-preference>`:

- You can specify the read preference in the
  :option:`--uri connection string <mongodump --uri>`

  .. code-block:: sh
  
     mongodump --uri="mongodb://mongos0.example.com:27017/?readPreference=secondary" [additional options]

  If specifying the read preference tags, include the
  :urioption:`readPreferenceTags` option:

  .. code-block:: sh
  
     mongodump --uri="mongodb://mongos0.example.com:27017/?readPreference=secondary&readPreferenceTags=region:east" [additional options]

- You can specify the read preference using the
  :option:`--readPreference <mongodump --readPreference>` command-line
  option.  The command-line option takes a string if specifying only the read preference mode:

  .. code-block:: sh
  
     mongodump --host="mongos0.example.com:27017" --readPreference=secondary [additional options]

  Or, the command-line option can takes a quote-enclosed document 
  ``'{ mode: <mode>, tagSets: [ <tag1>, ... ], maxStalenessSeconds: <num>}'`` 
  to specify the mode, the optional :ref:`read preference tag
  sets <configure-read-pref-tags>`, and the optional
  :ref:`maxStalenessSeconds
  <replica-set-read-preference-max-staleness>`:

  .. code-block:: sh

     mongodump --host="mongos0.example.com:27017" --readPreference='{mode: "secondary", tagSets: [ { "region": "east" } ]}' [additional options]

Learn More
----------

- :ref:`mongodump-compatibility-and-installation`
- :ref:`mongodump-behavior`
- :ref:`mongodump-options`
- :ref:`mongodump-examples`
